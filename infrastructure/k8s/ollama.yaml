---
# Ollama Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: ai-infrastructure
  labels:
    app: ollama
    component: ai-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
        component: ai-infrastructure
    spec:
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - containerPort: 11434
          name: http
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0"
        - name: OLLAMA_ORIGINS
          value: "*"
        - name: OLLAMA_MODELS
          value: "/root/.ollama/models"
        resources:
          requests:
            cpu: 2000m
            memory: 8Gi
          limits:
            cpu: 4000m
            memory: 16Gi
        livenessProbe:
          httpGet:
            path: /
            port: 11434
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 11434
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: ollama-data
          mountPath: /root/.ollama
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: ollama-data
        persistentVolumeClaim:
          claimName: ollama-data
      - name: tmp
        emptyDir:
          sizeLimit: 10Gi
      restartPolicy: Always
      # Prefer nodes with more resources for Ollama
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values: ["true"]
---
# Ollama Service
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: ai-infrastructure
  labels:
    app: ollama
spec:
  selector:
    app: ollama
  ports:
  - name: http
    port: 80
    targetPort: 11434
    protocol: TCP
  type: ClusterIP
---
# Ollama PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-data
  namespace: ai-infrastructure
  labels:
    app: ollama
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn
---
# Ollama Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ollama
  namespace: ai-infrastructure
  labels:
    app: ollama
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/client-max-body-size: "100m"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /ollama(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ollama
            port:
              number: 80
---
# Ollama Model Downloader Job
apiVersion: batch/v1
kind: Job
metadata:
  name: ollama-model-downloader
  namespace: ai-infrastructure
  labels:
    app: ollama
    component: model-downloader
spec:
  template:
    metadata:
      labels:
        app: ollama
        component: model-downloader
    spec:
      restartPolicy: OnFailure
      containers:
      - name: model-downloader
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Ollama service to be ready
          until curl -f http://ollama.ai-infrastructure.svc.cluster.local/; do
            echo "Waiting for Ollama service..."
            sleep 10
          done

          # Download recommended models
          echo "Downloading Llama 2 7B model..."
          curl -X POST http://ollama.ai-infrastructure.svc.cluster.local/api/pull -d '{"name":"llama2:7b"}'

          echo "Downloading Code Llama 7B model..."
          curl -X POST http://ollama.ai-infrastructure.svc.cluster.local/api/pull -d '{"name":"codellama:7b"}'

          echo "Downloading Mistral 7B model..."
          curl -X POST http://ollama.ai-infrastructure.svc.cluster.local/api/pull -d '{"name":"mistral:7b"}'

          echo "Model download completed!"
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["ollama"]
              topologyKey: kubernetes.io/hostname
